{
    "$id": "/WorkspaceClientCapabilities",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "CodeLensWorkspaceClientCapabilities": {
            "properties": {
                "refreshSupport": {
                    "description": "Whether the client implementation supports a refresh request sent from the\nserver to the client.\n\nNote that this event is global and will force the client to refresh all\ncode lenses currently shown. It should be used with absolute care and is\nuseful for situation where a server for example detect a project wide\nchange that requires such a calculation.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DidChangeConfigurationClientCapabilities": {
            "properties": {
                "dynamicRegistration": {
                    "description": "Did change configuration notification supports dynamic registration.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DidChangeWatchedFilesClientCapabilities": {
            "properties": {
                "dynamicRegistration": {
                    "description": "Did change watched files notification supports dynamic registration. Please note\nthat the current protocol doesn't support static configuration for file changes\nfrom the server side.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ExecuteCommandClientCapabilities": {
            "description": "The client capabilities of a [ExecuteCommandRequest](#ExecuteCommandRequest).",
            "properties": {
                "dynamicRegistration": {
                    "description": "Execute command supports dynamic registration.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FailureHandlingKind": {
            "enum": [
                "abort",
                "textOnlyTransactional",
                "transactional",
                "undo"
            ],
            "type": "string"
        },
        "FileOperationClientCapabilities": {
            "description": "Capabilities relating to events from file operations by the user in the client.\n\nThese events do not come from the file system, they come from user operations\nlike renaming a file in the UI.",
            "properties": {
                "didCreate": {
                    "description": "The client has support for sending didCreateFiles notifications.",
                    "type": "boolean"
                },
                "didDelete": {
                    "description": "The client has support for sending didDeleteFiles notifications.",
                    "type": "boolean"
                },
                "didRename": {
                    "description": "The client has support for sending didRenameFiles notifications.",
                    "type": "boolean"
                },
                "dynamicRegistration": {
                    "description": "Whether the client supports dynamic registration for file requests/notifications.",
                    "type": "boolean"
                },
                "willCreate": {
                    "description": "The client has support for willCreateFiles requests.",
                    "type": "boolean"
                },
                "willDelete": {
                    "description": "The client has support for willDeleteFiles requests.",
                    "type": "boolean"
                },
                "willRename": {
                    "description": "The client has support for willRenameFiles requests.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SemanticTokensWorkspaceClientCapabilities": {
            "properties": {
                "refreshSupport": {
                    "description": "Whether the client implementation supports a refresh request sent from\nthe server to the client.\n\nNote that this event is global and will force the client to refresh all\nsemantic tokens currently shown. It should be used with absolute care\nand is useful for situation where a server for example detect a project\nwide change that requires such a calculation.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "WorkspaceEditClientCapabilities": {
            "properties": {
                "changeAnnotationSupport": {
                    "description": "Whether the client in general supports change annotations on text edits,\ncreate file, rename file and delete file changes.",
                    "properties": {
                        "groupsOnLabel": {
                            "description": "Whether the client groups edits with equal labels into tree nodes,\nfor instance all edits labelled with \"Changes in Strings\" would\nbe a tree node.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "documentChanges": {
                    "description": "The client supports versioned document changes in `WorkspaceEdit`s",
                    "type": "boolean"
                },
                "failureHandling": {
                    "$ref": "/WorkspaceClientCapabilities#/definitions/FailureHandlingKind",
                    "description": "The failure handling strategy of a client if applying the workspace edit\nfails."
                },
                "normalizesLineEndings": {
                    "description": "Whether the client normalizes line endings to the client specific\nsetting.\nIf set to `true` the client will normalize line ending characters\nin a workspace edit containing to the client specific new line\ncharacter.",
                    "type": "boolean"
                },
                "resourceOperations": {
                    "description": "The resource operations the client supports. Clients should at least\nsupport 'create', 'rename' and 'delete' files and folders.",
                    "items": {
                        "description": "The kind of resource operations supported by the client.",
                        "enum": [
                            "create",
                            "delete",
                            "rename"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WorkspaceSymbolClientCapabilities": {
            "description": "Client capabilities for a [WorkspaceSymbolRequest](#WorkspaceSymbolRequest).",
            "properties": {
                "dynamicRegistration": {
                    "description": "Symbol request supports dynamic registration.",
                    "type": "boolean"
                },
                "symbolKind": {
                    "description": "Specific capabilities for the `SymbolKind` in the `workspace/symbol` request.",
                    "properties": {
                        "valueSet": {
                            "description": "The symbol kind values the client supports. When this\nproperty exists the client also guarantees that it will\nhandle values outside its set gracefully and falls back\nto a default value when unknown.\n\nIf this property is not present the client only supports\nthe symbol kinds from `File` to `Array` as defined in\nthe initial version of the protocol.",
                            "items": {
                                "description": "A symbol kind.",
                                "enum": [
                                    1,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15,
                                    16,
                                    17,
                                    18,
                                    19,
                                    2,
                                    20,
                                    21,
                                    22,
                                    23,
                                    24,
                                    25,
                                    26,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9
                                ],
                                "type": "number"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "tagSupport": {
                    "description": "The client supports tags on `SymbolInformation`.\nClients supporting tags have to handle unknown tags gracefully.",
                    "properties": {
                        "valueSet": {
                            "description": "The tags supported by the client.",
                            "items": {
                                "enum": [
                                    1
                                ],
                                "type": "number"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "valueSet"
                    ],
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "description": "Workspace specific client capabilities.",
    "properties": {
        "applyEdit": {
            "description": "The client supports applying batch edits\nto the workspace by supporting the request\n'workspace/applyEdit'",
            "type": "boolean"
        },
        "codeLens": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/CodeLensWorkspaceClientCapabilities",
            "description": "Capabilities specific to the code lens requests scoped to the\nworkspace."
        },
        "didChangeConfiguration": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/DidChangeConfigurationClientCapabilities",
            "description": "Capabilities specific to the `workspace/didChangeConfiguration` notification."
        },
        "didChangeWatchedFiles": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/DidChangeWatchedFilesClientCapabilities",
            "description": "Capabilities specific to the `workspace/didChangeWatchedFiles` notification."
        },
        "executeCommand": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/ExecuteCommandClientCapabilities",
            "description": "Capabilities specific to the `workspace/executeCommand` request."
        },
        "fileOperations": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/FileOperationClientCapabilities",
            "description": "The client has support for file notifications/requests for user operations on files.\n\nSince 3.16.0"
        },
        "semanticTokens": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/SemanticTokensWorkspaceClientCapabilities",
            "description": "Capabilities specific to the semantic token requests scoped to the\nworkspace."
        },
        "symbol": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/WorkspaceSymbolClientCapabilities",
            "description": "Capabilities specific to the `workspace/symbol` request."
        },
        "workspaceEdit": {
            "$ref": "/WorkspaceClientCapabilities#/definitions/WorkspaceEditClientCapabilities",
            "description": "Capabilities specific to `WorkspaceEdit`s"
        }
    },
    "type": "object"
}

