{
    "$id": "/DocumentSymbol",
    "$ref": "/DocumentSymbol#/definitions/DocumentSymbol",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "DocumentSymbol": {
            "description": "Represents programming constructs like variables, classes, interfaces etc.\nthat appear in a document. Document symbols can be hierarchical and they\nhave two ranges: one that encloses its definition and one that points to\nits most interesting range, e.g. the range of an identifier.",
            "properties": {
                "children": {
                    "description": "Children of this symbol, e.g. properties of a class.",
                    "items": {
                        "$ref": "/DocumentSymbol#/definitions/DocumentSymbol"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "Indicates if this symbol is deprecated.",
                    "type": "boolean"
                },
                "detail": {
                    "description": "More detail for this symbol, e.g the signature of a function.",
                    "type": "string"
                },
                "kind": {
                    "$ref": "/DocumentSymbol#/definitions/SymbolKind",
                    "description": "The kind of this symbol."
                },
                "name": {
                    "description": "The name of this symbol. Will be displayed in the user interface and therefore must not be\nan empty string or a string only consisting of white spaces.",
                    "type": "string"
                },
                "range": {
                    "$ref": "/DocumentSymbol#/definitions/Range",
                    "description": "The range enclosing this symbol not including leading/trailing whitespace but everything else\nlike comments. This information is typically used to determine if the the clients cursor is\ninside the symbol to reveal in the symbol in the UI."
                },
                "selectionRange": {
                    "$ref": "/DocumentSymbol#/definitions/Range",
                    "description": "The range that should be selected and revealed when this symbol is being picked, e.g the name of a function.\nMust be contained by the the `range`."
                },
                "tags": {
                    "description": "Tags for this completion item.",
                    "items": {
                        "enum": [
                            1
                        ],
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Position": {
            "description": "Position in a text document expressed as zero-based line and character offset.\nThe offsets are based on a UTF-16 string representation. So a string of the form\n`a\ud801\udc00b` the character offset of the character `a` is 0, the character offset of `\ud801\udc00`\nis 1 and the character offset of b is 3 since `\ud801\udc00` is represented using two code\nunits in UTF-16.\n\nPositions are line end character agnostic. So you can not specify a position that\ndenotes `\\r|\\n` or `\\n|` where `|` represents the character offset.\nThe Position namespace provides helper functions to work with\n[Position](#Position) literals.",
            "properties": {
                "character": {
                    "$ref": "/DocumentSymbol#/definitions/uinteger",
                    "description": "Character offset on a line in a document (zero-based). Assuming that the line is\nrepresented as a string, the `character` value represents the gap between the\n`character` and `character + 1`.\n\nIf the character value is greater than the line length it defaults back to the\nline length."
                },
                "line": {
                    "$ref": "/DocumentSymbol#/definitions/uinteger",
                    "description": "Line position in a document (zero-based)."
                }
            },
            "type": "object"
        },
        "Range": {
            "description": "A range in a text document expressed as (zero-based) start and end positions.\n\nIf you want to specify a range that contains a line including the line ending\ncharacter(s) then use an end position denoting the start of the next line.\nFor example:\n```ts\n{\n    start: { line: 5, character: 23 }\n    end : { line 6, character : 0 }\n}\n```\nThe Range namespace provides helper functions to work with\n[Range](#Range) literals.",
            "properties": {
                "end": {
                    "$ref": "/DocumentSymbol#/definitions/Position",
                    "description": "The range's end position."
                },
                "start": {
                    "$ref": "/DocumentSymbol#/definitions/Position",
                    "description": "The range's start position"
                }
            },
            "type": "object"
        },
        "SymbolKind": {
            "description": "A symbol kind.",
            "enum": [
                1,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                2,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                3,
                4,
                5,
                6,
                7,
                8,
                9
            ],
            "type": "number"
        },
        "uinteger": {
            "description": "Defines an unsigned integer in the range of 0 to 2^31 - 1.",
            "type": "number"
        }
    },
    "description": "Represents programming constructs like variables, classes, interfaces etc.\nthat appear in a document. Document symbols can be hierarchical and they\nhave two ranges: one that encloses its definition and one that points to\nits most interesting range, e.g. the range of an identifier."
}

