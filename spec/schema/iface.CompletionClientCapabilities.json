{
    "$id": "/CompletionClientCapabilities",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "InsertTextMode": {
            "description": "How whitespace and indentation is handled during completion\nitem insertion.",
            "enum": [
                1,
                2
            ],
            "type": "number"
        }
    },
    "description": "Completion client capabilities",
    "properties": {
        "completionItem": {
            "description": "The client supports the following `CompletionItem` specific\ncapabilities.",
            "properties": {
                "commitCharactersSupport": {
                    "description": "Client supports commit characters on a completion item.",
                    "type": "boolean"
                },
                "deprecatedSupport": {
                    "description": "Client supports the deprecated property on a completion item.",
                    "type": "boolean"
                },
                "documentationFormat": {
                    "description": "Client supports the follow content formats for the documentation\nproperty. The order describes the preferred format of the client.",
                    "items": {
                        "description": "Describes the content type that a client supports in various\nresult literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n\nPlease note that `MarkupKinds` must not start with a `$`. This kinds\nare reserved for internal usage.",
                        "enum": [
                            "markdown",
                            "plaintext"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "insertReplaceSupport": {
                    "description": "Client support insert replace edit to control different behavior if a\ncompletion item is inserted in the text or should replace text.",
                    "type": "boolean"
                },
                "insertTextModeSupport": {
                    "description": "The client supports the `insertTextMode` property on\na completion item to override the whitespace handling mode\nas defined by the client (see `insertTextMode`).",
                    "properties": {
                        "valueSet": {
                            "items": {
                                "description": "How whitespace and indentation is handled during completion\nitem insertion.",
                                "enum": [
                                    1,
                                    2
                                ],
                                "type": "number"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "preselectSupport": {
                    "description": "Client supports the preselect property on a completion item.",
                    "type": "boolean"
                },
                "resolveSupport": {
                    "description": "Indicates which properties a client can resolve lazily on a completion\nitem. Before version 3.16.0 only the predefined properties `documentation`\nand `details` could be resolved lazily.",
                    "properties": {
                        "properties": {
                            "description": "The properties that a client can resolve lazily.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "snippetSupport": {
                    "description": "Client supports snippets as insert text.\n\nA snippet can define tab stops and placeholders with `$1`, `$2`\nand `${3:foo}`. `$0` defines the final tab stop, it defaults to\nthe end of the snippet. Placeholders with equal identifiers are linked,\nthat is typing in one will update others too.",
                    "type": "boolean"
                },
                "tagSupport": {
                    "description": "Client supports the tag property on a completion item. Clients supporting\ntags have to handle unknown tags gracefully. Clients especially need to\npreserve unknown tags when sending a completion item back to the server in\na resolve call.",
                    "properties": {
                        "valueSet": {
                            "description": "The tags supported by the client.",
                            "items": {
                                "enum": [
                                    1
                                ],
                                "type": "number"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "completionItemKind": {
            "properties": {
                "valueSet": {
                    "description": "The completion item kind values the client supports. When this\nproperty exists the client also guarantees that it will\nhandle values outside its set gracefully and falls back\nto a default value when unknown.\n\nIf this property is not present the client only supports\nthe completion items kinds from `Text` to `Reference` as defined in\nthe initial version of the protocol.",
                    "items": {
                        "description": "The kind of a completion entry.",
                        "enum": [
                            1,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            2,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                        ],
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "contextSupport": {
            "description": "The client supports to send additional context information for a\n`textDocument/completion` request.",
            "type": "boolean"
        },
        "dynamicRegistration": {
            "description": "Whether completion supports dynamic registration.",
            "type": "boolean"
        },
        "insertTextMode": {
            "$ref": "/CompletionClientCapabilities#/definitions/InsertTextMode",
            "description": "Defines how the client handles whitespace and indentation\nwhen accepting a completion item that uses multi line\ntext in either `insertText` or `textEdit`."
        }
    },
    "type": "object"
}

